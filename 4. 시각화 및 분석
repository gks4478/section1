{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOhV3mf+KhOHxKJp7lo45Rw"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"84Mc1uIHuxTf"},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","import matplotlib.patches as mpatches"]},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('vgames2_final.csv')"],"metadata":{"id":"JegPa6xru3fV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 휴대용, 가정용, 컴퓨터 3가지로 분류했다.\n","portable = ['DS','PSP','GBA','3DS','PSV','GB','WS']\n","platform_list = list(df['Platform'])\n","value = []\n","for i in platform_list:\n","  value.append('pc') if i == 'PC' else value.append('portable') if i in portable else value.append('video')\n","df['type'] = value"],"metadata":{"id":"J4ZA3n0W2K7B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# NA_Sales ~ Other_Sales까지의 전체 매출을 total에 저장한다.\n","df['total'] = df.loc[:, 'NA_Sales':'Other_Sales'].sum(axis = 1)"],"metadata":{"id":"uZnVxTJZFTN4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# divider를를 위한 변수들 divider 괄호 안에 이 변수를 넣으면 된다.\n","df_1980 = df.query('(Year < 1990)')\n","df_1990 = df.query('(Year >= 1990) and (Year < 2000)')\n","df_2000 = df.query('(Year >= 2000) and (Year < 2010)')\n","df_2010 = df.query('(Year >= 2010) and (Year <= 2020)')\n","\n","# df의 각 국가의 플랫폼 top4를 골라준다.\n","def top(value0, value):\n","  A = value0.groupby(['type', 'Platform']).sum().reset_index()\n","  top_4 = A.nlargest(3, value)[['Platform', value]].reset_index()\n","  top_4 = top_4.drop(top_4.iloc[:,[0]], axis = 1)\n","  top_4.loc[len(top_4)] = ['etc', A['EU_Sales'].sort_values()[:-3].sum()]\n","  top_4[value] = round((top_4[value] / top_4[value].sum()) * 100,2)\n","  return top_4\n","\n","# top 위한 함수 divider() 안에 year로 구분되는 쿼리 문을 넣는다.\n","def divider(value2):\n","  na = top(value2, 'NA_Sales')\n","  eu = top(value2, 'EU_Sales')\n","  jp = top(value2, 'JP_Sales')\n","  ot = top(value2, 'Other_Sales')\n","  return na, eu, jp, ot"],"metadata":{"id":"vjwE5lnfDk5t"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 그래프를 위한 색깔 저장.\n","platform = ['DS','PS2','PS3','Wii','X360','PSP','PS','PC','XB',\n","            'GBA','GC','3DS','PSV','PS4','N64','SNES','XOne','SAT',\n","            'WiiU','2600','GB','NES','DC','GEN','NG','SCD','WS',\n","            '3DO','TG16','GG','PCFX', 'etc']\n","\n","colors = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22',\n","          '#17becf', '#aec7e8', '#ffbb78', '#98df8a', '#ff9896', '#c5b0d5', '#c49c94', '#f7b6d2', '#c7c7c7',\n","          '#dbdb8d', '#9edae5', '#c7e9c0', '#fddaec', '#edf8b1', '#c6dbef', '#fdae6b', '#b2df8a', '#e7969c',\n","          '#f1eef6', '#bcbddc', '#fdd0a2', '#fb8072', 'gray']\n","\n","# 색깔을 정해주는 함수. value3 = divider[0][~_Sales], value4 = 색깔 변수명\n","def c_color(value3, value4):\n","  value4 = []\n","  for i in value3:\n","    cnt = 0\n","    for j in platform:\n","      if i != j:\n","        cnt += 1\n","      else:\n","        value4.append(colors[cnt])\n","  value4.reverse()\n","  return value4"],"metadata":{"id":"MN8QnTTez9wp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 라벨을 그려주는 함수.\n","def g_label(value8):\n","  b = list(value8)\n","  b.reverse()\n","  return b\n","# 그래프 value5 = divider(year), value6 = ~_Sales\n","def y_list(value5):\n","  a = list(value5)\n","  return [100, 100-a[3], 100-(a[3] + a[2]), 100-(a[3] + a[2] + a[1])]"],"metadata":{"id":"gfvjlpKrCSlA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 진짜 찐 최종 그래프.\n","def draw_graph(value6, value7):\n","  \n","  fig, ax = plt.subplots()\n","  # 그래프 색깔이랑 라벨.\n","  na_c = c_color(value6[0]['Platform'], 'na_c'); na_l = g_label(value6[0]['Platform'])\n","  eu_c = c_color(value6[1]['Platform'], 'eu_c'); eu_l = g_label(value6[1]['Platform'])\n","  jp_c = c_color(value6[2]['Platform'], 'jp_c'); jp_l = g_label(value6[2]['Platform'])\n","  ot_c = c_color(value6[3]['Platform'], 'ot_c'); ot_l = g_label(value6[3]['Platform'])\n","  \n","  # 그래프 그리기.\n","  ax.bar('NA', y_list(value6[0]['NA_Sales']), color = na_c, label = na_l)\n","  ax.bar('EU', y_list(value6[1]['EU_Sales']), color = eu_c, label = eu_l)\n","  ax.bar('JP', y_list(value6[2]['JP_Sales']), color = jp_c, label = jp_l)\n","  ax.bar('Other', y_list(value6[3]['Other_Sales']), color = ot_c, label = ot_l)\n","\n","  colors = []\n","  for c in na_c + eu_c + jp_c + ot_c:\n","    if c not in colors:\n","      colors.append(c)\n","  \n","  labels = []\n","  for l in na_l + eu_l + jp_l + ot_l:\n","    if l not in labels:\n","      labels.append(l)\n","\n","  handles = []\n","  for i in range(len(colors)):\n","      handles.append(mpatches.Patch(color=colors[i], label=labels[i]))\n","\n","  ax.set_title(value7)\n","  ax.legend(handles=handles, loc='center left', bbox_to_anchor=(1, 0.5));"],"metadata":{"id":"DjUiywutDJSW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 그래프 얻기.(divider 안의 df 뒤의 숫자와 제목만 바꿔주면 된다.)\n","draw_graph(divider(df_1980), \"1980's Platform\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"Bzc5DUgXMovW","executionInfo":{"status":"ok","timestamp":1678670045066,"user_tz":-540,"elapsed":870,"user":{"displayName":"씨해바","userId":"13264244849024193723"}},"outputId":"943d7156-5d2b-45ed-99ee-02b5170700f2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["def value_y(value8):\n","  b = list(value8)\n","  return [100, 100-b[2], 100-(b[2] + b[1])]\n","\n","# value_per(df_1980, 'NA_Sales')\n","def value_per(value9, value10):\n","  return list((list(value9.groupby('type')[value10].sum()) / value9.groupby('type')[value10].sum().sum()) * 100)\n","\n","# value_label(df_1980, 'Na_Sales')\n","def value_label(value11, value12):\n","  c = list(value11.groupby('type')[value12].sum().keys()) + ['etc']\n","  return c[::-1]"],"metadata":{"id":"UCrtKbWSalyF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 연도별 type 점유율 그래프.\n","# type_graph(df_1980, '1980\"s type')\n","def type_graph(value13, value14):\n","\n","  fig, ax = plt.subplots()\n","  color = ['cadetblue','burlywood','plum']\n","  ax.bar('NA', value_y(value_per(value13, 'NA_Sales')), label = value_label(value13, 'NA_Sales'), color = color, width = 0.7)\n","  ax.bar('EU', value_y(value_per(value13, 'EU_Sales')), label = value_label(value13, 'EU_Sales'), color = color,width = 0.7)\n","  ax.bar('JP', value_y(value_per(value13, 'JP_Sales')), label = value_label(value13, 'JP_Sales'), color = color,width = 0.7)\n","  ax.bar('Other', value_y(value_per(value13, 'Other_Sales')), label = value_label(value13, 'Other_Sales'), color = color,width = 0.7)\n","  handles = []\n","  labels = ['video','portable','pc']\n","  for i in range(len(color)):\n","        handles.append(mpatches.Patch(color=color[i], label=labels[i]))\n","  ax.set_title(value14)\n","  ax.legend(handles=handles, loc='center left', bbox_to_anchor=(0.5, -0.2));"],"metadata":{"id":"Dqcl7llMdGNH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["type_graph(df_2010, \"2010's type\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":332},"id":"QC9FIRQSgdBP","executionInfo":{"status":"ok","timestamp":1678673626984,"user_tz":-540,"elapsed":11,"user":{"displayName":"씨해바","userId":"13264244849024193723"}},"outputId":"1072f421-4a5c-4501-939e-3cb6714d49fc"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df_pc = df[df.type == 'pc']"],"metadata":{"id":"vphtd92gMKD4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fig1, ax1 = plt.subplots()\n","color = ['green','gold','purple','red','gray']\n","ax1.pie(list(df_pc.groupby('Genre')['total'].sum().sort_values())[-4:] \n","        + [sum(list(df_pc.groupby('Genre')['total'].sum().sort_values())[:-4])]\n","        ,labels = list(df_pc.groupby('Genre')['total'].sum().sort_values().keys()[-4:]) + ['etc']\n","        ,colors = color,autopct='%.1f%%')\n","ax1.set_title('<PC Game Genre Top 4>');"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":264},"id":"WmqokO0ZPm4O","executionInfo":{"status":"ok","timestamp":1678669925748,"user_tz":-540,"elapsed":750,"user":{"displayName":"씨해바","userId":"13264244849024193723"}},"outputId":"3a1e85e5-6855-4685-ab7d-aa3f12143811"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["def con_genre(value15, value16):\n","  df_pc_genre = df_pc.groupby('Genre')[value15].sum().sort_values()\n","  color = ['green','gold','purple','red','gray']\n","  fig, ax = plt.subplots()\n","  ax.pie(list(df_pc_genre[-4:]) + [sum(df_pc_genre[:-4])], \n","        labels = list(df_pc_genre[-4:].keys() ) + ['etc'],\n","        colors = color,autopct='%.1f%%')\n","  ax.set_title(value16);"],"metadata":{"id":"FVDymd5ekvFb","executionInfo":{"status":"ok","timestamp":1678688398261,"user_tz":-540,"elapsed":1027,"user":{"displayName":"씨해바","userId":"13264244849024193723"}}},"execution_count":337,"outputs":[]},{"cell_type":"code","source":["con_genre('Other_Sales', '<Other Game Genre Top 4>')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":264},"id":"hpCd-6b8n4Eb","executionInfo":{"status":"ok","timestamp":1678688470448,"user_tz":-540,"elapsed":1565,"user":{"displayName":"씨해바","userId":"13264244849024193723"}},"outputId":"f2a293ba-7f89-424a-9b67-68491d87a4ec"},"execution_count":341,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["aa = df[df['type'] == 'video']\n","bb = aa[aa.Platform.str.contains('PS')].sort_values(by = 'total', ascending=False).head(10)\n","cc = bb.drop(['Year','Publisher','NA_Sales','EU_Sales','JP_Sales','Other_Sales','type'], axis = 'columns').reset_index()\n","cc.drop('index', axis = 'columns')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"8DVr-sA3vyd1","executionInfo":{"status":"ok","timestamp":1678687443863,"user_tz":-540,"elapsed":404,"user":{"displayName":"씨해바","userId":"13264244849024193723"}},"outputId":"501c367b-bc0a-48c8-bba0-1d48607ec909"},"execution_count":289,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                             Name Platform    Genre  total\n","0              Grand Theft Auto V      PS3   Action  21.39\n","1   Grand Theft Auto: San Andreas      PS2   Action  20.81\n","2     Grand Theft Auto: Vice City      PS2   Action  16.15\n","3          Gran Turismo 3: A-Spec      PS2   Racing  14.97\n","4       Call of Duty: Black Ops 3      PS4  Shooter  14.24\n","5      Call of Duty: Black Ops II      PS3  Shooter  14.04\n","6  Call of Duty: Modern Warfare 3      PS3  Shooter  13.47\n","7            Grand Theft Auto III      PS2   Action  13.10\n","8         Call of Duty: Black Ops      PS3  Shooter  12.73\n","9              Grand Theft Auto V      PS4   Action  11.99"],"text/html":["\n","  <div id=\"df-0f84a0d3-c1cb-4a9a-9066-64dac4e8e7d8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Platform</th>\n","      <th>Genre</th>\n","      <th>total</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Grand Theft Auto V</td>\n","      <td>PS3</td>\n","      <td>Action</td>\n","      <td>21.39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Grand Theft Auto: San Andreas</td>\n","      <td>PS2</td>\n","      <td>Action</td>\n","      <td>20.81</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Grand Theft Auto: Vice City</td>\n","      <td>PS2</td>\n","      <td>Action</td>\n","      <td>16.15</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gran Turismo 3: A-Spec</td>\n","      <td>PS2</td>\n","      <td>Racing</td>\n","      <td>14.97</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Call of Duty: Black Ops 3</td>\n","      <td>PS4</td>\n","      <td>Shooter</td>\n","      <td>14.24</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Call of Duty: Black Ops II</td>\n","      <td>PS3</td>\n","      <td>Shooter</td>\n","      <td>14.04</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Call of Duty: Modern Warfare 3</td>\n","      <td>PS3</td>\n","      <td>Shooter</td>\n","      <td>13.47</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Grand Theft Auto III</td>\n","      <td>PS2</td>\n","      <td>Action</td>\n","      <td>13.10</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Call of Duty: Black Ops</td>\n","      <td>PS3</td>\n","      <td>Shooter</td>\n","      <td>12.73</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Grand Theft Auto V</td>\n","      <td>PS4</td>\n","      <td>Action</td>\n","      <td>11.99</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f84a0d3-c1cb-4a9a-9066-64dac4e8e7d8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0f84a0d3-c1cb-4a9a-9066-64dac4e8e7d8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0f84a0d3-c1cb-4a9a-9066-64dac4e8e7d8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":289}]}]}